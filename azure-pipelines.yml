trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dynatrace-vars     # DYNATRACE_API_TOKEN, DYNATRACE_URL
- name: SERVICE_NAME
  value: order-service
- name: ENV_NAME
  value: dev

steps:
# 1) Test de conexi√≥n a Dynatrace
- bash: |
    echo "üîç Probando conexi√≥n con Dynatrace en $DYNATRACE_URL"
    CODE=$(curl -s -o /dev/null -w "%{http_code}" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      "$DYNATRACE_URL/api/v2/metrics")
    echo "HTTP CODE: $CODE"
    if [ "$CODE" -ne 200 ]; then
      echo "‚ùå Fall√≥ la conexi√≥n (esperado 200)"
      exit 1
    fi
    echo "‚úÖ Conexi√≥n OK con Dynatrace"
  displayName: Test conexi√≥n Dynatrace
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)

# 2) Log inicial de BUILD
- bash: |
    TS_MS=$(date +%s%3N)
    echo "üöÄ Enviando LOG inicial de Build a Dynatrace..."
    read -r -d '' BODY <<'JSON'
[
  {
    "timestamp": __TS_MS__,
    "severity": "INFO",
    "title": "Azure DevOps Build STARTED",
    "content": "Inicio de ejecuci√≥n del pipeline __PIPE_NAME__",
    "dt.source": "azure-devops",
    "service.name": "__SERVICE__",
    "env": "__ENV__",
    "pipeline.id": "__PIPE_ID__",
    "run.id": "__RUN_ID__",
    "build.branch": "__BRANCH__",
    "commit": "__COMMIT__",
    "status": "STARTED"
  }
]
JSON
    BODY=${BODY/__TS_MS__/$TS_MS}
    BODY=${BODY/__PIPE_NAME__/$(Build.DefinitionName)}
    BODY=${BODY/__SERVICE__/$(SERVICE_NAME)}
    BODY=${BODY/__ENV__/$(ENV_NAME)}
    BODY=${BODY/__PIPE_ID__/$(System.DefinitionId)}
    BODY=${BODY/__RUN_ID__/$(Build.BuildId)}
    BODY=${BODY/__BRANCH__/$(Build.SourceBranch)}
    BODY=${BODY/__COMMIT__/$(Build.SourceVersion)}

    echo "Payload:"
    echo "$BODY"

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json; charset=utf-8" \
      -H "Accept: application/json; charset=utf-8" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    case "$RESP" in
      2*) echo "‚úÖ Log inicial enviado" ;;
      *) echo "‚ùå Error enviando log inicial"; exit 1 ;;
    esac
  displayName: Enviar LOG inicial de Build
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)

# 3) Log final de BUILD (√©xito o fallo)
- bash: |
    TS_MS=$(date +%s%3N)
    # Agent.JobStatus se expande antes de ejecutar el bash
    STATUS=$(if [ "$(Agent.JobStatus)" = "Succeeded" ]; then echo SUCCESS; else echo FAILED; fi)

    echo "üì¶ Enviando log final de build ($STATUS)..."
    read -r -d '' BODY <<'JSON'
[
  {
    "timestamp": __TS_MS__,
    "severity": "INFO",
    "title": "Azure DevOps Build __STATUS__",
    "content": "Pipeline __PIPE_NAME__ ejecutado con estado __STATUS__",
    "dt.source": "azure-devops",
    "service.name": "__SERVICE__",
    "env": "__ENV__",
    "pipeline.id": "__PIPE_ID__",
    "run.id": "__RUN_ID__",
    "build.branch": "__BRANCH__",
    "commit": "__COMMIT__",
    "status": "__STATUS__"
  }
]
JSON
    BODY=${BODY/__TS_MS__/$TS_MS}
    BODY=${BODY//__STATUS__/$STATUS}
    BODY=${BODY/__PIPE_NAME__/$(Build.DefinitionName)}
    BODY=${BODY/__SERVICE__/$(SERVICE_NAME)}
    BODY=${BODY/__ENV__/$(ENV_NAME)}
    BODY=${BODY/__PIPE_ID__/$(System.DefinitionId)}
    BODY=${BODY/__RUN_ID__/$(Build.BuildId)}
    BODY=${BODY/__BRANCH__/$(Build.SourceBranch)}
    BODY=${BODY/__COMMIT__/$(Build.SourceVersion)}

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json; charset=utf-8" \
      -H "Accept: application/json; charset=utf-8" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    case "$RESP" in
      2*) echo "‚úÖ Log final enviado ($STATUS)" ;;
      *) echo "‚ùå Error enviando log final"; exit 1 ;;
    esac
  displayName: Enviar LOG final de Build a Dynatrace
  condition: always()
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)

# 4) Log de RELEASE (opcional, si tu pipeline hace publicaci√≥n)
- bash: |
    TS_MS=$(date +%s%3N)
    echo "üö¢ Enviando log de RELEASE..."
    read -r -d '' BODY <<'JSON'
[
  {
    "timestamp": __TS_MS__,
    "severity": "INFO",
    "title": "Azure DevOps Release ejecutada",
    "content": "Se complet√≥ la publicaci√≥n del pipeline __PIPE_NAME__",
    "dt.source": "azure-devops",
    "service.name": "__SERVICE__",
    "env": "__ENV__",
    "pipeline.id": "__PIPE_ID__",
    "run.id": "__RUN_ID__",
    "status": "RELEASED"
  }
]
JSON
    BODY=${BODY/__TS_MS__/$TS_MS}
    BODY=${BODY/__PIPE_NAME__/$(Build.DefinitionName)}
    BODY=${BODY/__SERVICE__/$(SERVICE_NAME)}
    BODY=${BODY/__ENV__/$(ENV_NAME)}
    BODY=${BODY/__PIPE_ID__/$(System.DefinitionId)}
    BODY=${BODY/__RUN_ID__/$(Build.BuildId)}

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json; charset=utf-8" \
      -H "Accept: application/json; charset=utf-8" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    case "$RESP" in
      2*) echo "‚úÖ Log de RELEASE enviado" ;;
      *) echo "‚ùå Error enviando log de RELEASE"; exit 1 ;;
    esac
  displayName: Enviar LOG de Release a Dynatrace
  condition: succeeded()
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)
    SERVICE_NAME: $(SERVICE_NAME)
    ENV_NAME: $(ENV_NAME)
