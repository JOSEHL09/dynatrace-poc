trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dynatrace-vars
- name: SERVICE_NAME
  value: order-service
- name: ENV_NAME
  value: dev

steps:
# 1Ô∏è‚É£ Test de conexi√≥n a Dynatrace
- bash: |
    echo "üîç Probando conexi√≥n con Dynatrace en $DYNATRACE_URL"
    CODE=$(curl -s -o /dev/null -w "%{http_code}" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      "$DYNATRACE_URL/api/v2/metrics")
    echo "HTTP CODE: $CODE"
    if [ "$CODE" -ne 200 ]; then
      echo "‚ùå Fall√≥ la conexi√≥n (esperado 200)"
      exit 1
    fi
    echo "‚úÖ Conexi√≥n OK con Dynatrace"
  displayName: "Test conexi√≥n Dynatrace"
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)

# 2Ô∏è‚É£ LOG INICIAL DE BUILD
- bash: |
    set -e
    TS_MS=$(date +%s%3N)
    echo "üöÄ Enviando LOG inicial de Build a Dynatrace..."

    BODY=$(cat <<EOF
[
  {
    "timestamp": $TS_MS,
    "severity": "INFO",
    "title": "Azure DevOps Build STARTED",
    "content": "Inicio de ejecuci√≥n del pipeline $(Build.DefinitionName)",
    "dt.source": "azure-devops",
    "service.name": "$(SERVICE_NAME)",
    "env": "$(ENV_NAME)",
    "pipeline.id": "$(System.DefinitionId)",
    "run.id": "$(Build.BuildId)",
    "build.branch": "$(Build.SourceBranch)",
    "commit": "$(Build.SourceVersion)",
    "status": "STARTED"
  }
]
EOF
)

    echo "Payload:"
    echo "$BODY"

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    if [[ "$RESP" != 2* ]]; then
      echo "‚ùå Error enviando log inicial"
      exit 1
    fi
    echo "‚úÖ Log inicial enviado"
  displayName: "Enviar LOG inicial de Build"
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)
    SERVICE_NAME: $(SERVICE_NAME)
    ENV_NAME: $(ENV_NAME)

# 3Ô∏è‚É£ LOG FINAL DE BUILD
- bash: |
    set -e
    TS_MS=$(date +%s%3N)
    if [ "$(Agent.JobStatus)" = "Succeeded" ]; then
      STATUS="SUCCESS"
    else
      STATUS="FAILED"
    fi
    echo "üì¶ Enviando log final de build ($STATUS)..."

    BODY=$(cat <<EOF
[
  {
    "timestamp": $TS_MS,
    "severity": "INFO",
    "title": "Azure DevOps Build $STATUS",
    "content": "Pipeline $(Build.DefinitionName) ejecutado con estado $STATUS",
    "dt.source": "azure-devops",
    "service.name": "$(SERVICE_NAME)",
    "env": "$(ENV_NAME)",
    "pipeline.id": "$(System.DefinitionId)",
    "run.id": "$(Build.BuildId)",
    "build.branch": "$(Build.SourceBranch)",
    "commit": "$(Build.SourceVersion)",
    "status": "$STATUS"
  }
]
EOF
)

    echo "Payload:"
    echo "$BODY"

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    if [[ "$RESP" != 2* ]]; then
      echo "‚ùå Error enviando log final"
      exit 1
    fi
    echo "‚úÖ Log final enviado ($STATUS)"
  displayName: "Enviar LOG final de Build"
  condition: always()
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)
    SERVICE_NAME: $(SERVICE_NAME)
    ENV_NAME: $(ENV_NAME)

# 4Ô∏è‚É£ LOG DE RELEASE (opcional)
- bash: |
    set -e
    TS_MS=$(date +%s%3N)
    echo "üö¢ Enviando log de RELEASE..."

    BODY=$(cat <<EOF
[
  {
    "timestamp": $TS_MS,
    "severity": "INFO",
    "title": "Azure DevOps Release ejecutada",
    "content": "Se complet√≥ la publicaci√≥n del pipeline $(Build.DefinitionName)",
    "dt.source": "azure-devops",
    "service.name": "$(SERVICE_NAME)",
    "env": "$(ENV_NAME)",
    "pipeline.id": "$(System.DefinitionId)",
    "run.id": "$(Build.BuildId)",
    "status": "RELEASED"
  }
]
EOF
)

    echo "Payload:"
    echo "$BODY"

    RESP=$(curl -s -o /tmp/resp.json -w "%{http_code}" -X POST "$DYNATRACE_URL/api/v2/logs/ingest" \
      -H "Authorization: Api-Token $DYNATRACE_API_TOKEN" \
      -H "Content-Type: application/json" \
      -d "$BODY")

    echo "HTTP CODE: $RESP"
    cat /tmp/resp.json || true
    if [[ "$RESP" != 2* ]]; then
      echo "‚ùå Error enviando log de RELEASE"
      exit 1
    fi
    echo "‚úÖ Log de RELEASE enviado"
  displayName: "Enviar LOG de Release"
  condition: succeeded()
  env:
    DYNATRACE_API_TOKEN: $(DYNATRACE_API_TOKEN)
    DYNATRACE_URL: $(DYNATRACE_URL)
    SERVICE_NAME: $(SERVICE_NAME)
    ENV_NAME: $(ENV_NAME)
